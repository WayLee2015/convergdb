#!/usr/bin/env ruby

# Copyright © 2020 Beyondsoft Consulting, Inc.

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software
# and associated documentation files (the “Software”), to deal in the Software without
# restriction, including without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.

# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

require 'convergdb'
require 'thor'
require 'json'
require 'pp'

class CLI < Thor
  package_name "convergdb"
  
  desc "generate", "generate configuration"
  long_desc <<-LONGDESC
`convergdb generate` will analyze the following files in the local directory in
order to build the deployment artifacts:

    *.schema

    *.deployment
  LONGDESC
  def generatetf()
    ConvergDB::Interactions::Generate.new(
      Dir.glob('./*.schema'),
      Dir.glob('./*.deployment'),
      './'
    ).master_generator.generate!
  end
  
  desc "license", "review convergdb license"
  def license()
    ConvergDB::Interactions::Licenses.new
  end
  
  desc "version", "version and related info"
  def version()
    puts "version: #{ConvergDB::VERSION}"
    puts "github terraform module commit ref: #{ConvergDB::TERRAFORM_MODULES_COMMIT_ID}"
    puts "dockerhub image name  : #{ConvergDB::DOCKERHUB_IMAGE_NAME}"
    puts "dockerhub image digest: #{ConvergDB::DOCKERHUB_IMAGE_SHA256}"
  end
end

CLI.start(ARGV)
